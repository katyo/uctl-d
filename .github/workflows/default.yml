name: CI
on:
  push:
    branches:
      - master
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
jobs:
  analyze:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        dc:
          - ldc-latest
          - ldc-master
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup D compiler and tools
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Run D scanner
        uses: dgellow/action-dscanner@v1.0.1
        with:
          level: warning
          reporter: github-check

  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        target:
          - i686-linux-gnu
          - x86_64-linux-gnu
          - armv6-linux-gnueabi
          - armv7-linux-gnueabi
          - aarch64-linux-gnu
        dc:
          - ldc-latest
          - ldc-master
    runs-on: ${{ matrix.os }}
    steps:
      - run: sudo apt-get update
      - name: Setup cross linux toolchain
        if: contains(matrix.os, 'ubuntu') && contains(matrix.target, '-linux-') && !startsWith(matrix.target, 'x86_64')
        run: sudo apt-get install -y gcc-$(printf ${{ matrix.target }} | sed 's/arm[^-]*/arm/g')
      - name: Setup arm embedded toolchain
        if: contains(matrix.os, 'ubuntu') && contains(matrix.target, '-none-') && startsWith(matrix.target, 'arm')
        run: sudo apt-get install -y gcc-arm-none-eabi
      - name: Setup qemu user
        if: contains(matrix.os, 'ubuntu') && contains(matrix.target, '-linux-') && !startsWith(matrix.target, 'i686') && !startsWith(matrix.target, 'x86_64')
        run: sudo apt-get install -y qemu-user
      - name: Setup qemu system
        if: contains(matrix.os, 'ubuntu') && contains(matrix.target, '-none-') && !startsWith(matrix.target, 'i686') && !startsWith(matrix.target, 'x86_64')
        run: sudo apt-get install -y qemu-system-arm
      - name: Setup D compiler and tools
        uses: dlang-community/setup-dlang@v1
        with:
          compiler: ${{ matrix.dc }}
      - name: Checkout sources
        uses: actions/checkout@v2
      - name: Build tests
        run: make build TARGET=${{ matrix.target }}
      - name: Run tests native linux
        if: contains(matrix.os, 'ubuntu') && contains(matrix.target, '-linux-') && (startsWith(matrix.target, 'i686') || startsWith(matrix.target, 'x86_64'))
        run: make test TARGET=${{ matrix.target }}
      - name: Run tests cross linux arm
        if: contains(matrix.os, 'ubuntu') && contains(matrix.target, '-linux-') && (startsWith(matrix.target, 'arm') || startsWith(matrix.target, 'aarch64'))
        run: make test TARGET=${{ matrix.target }} RUNNER='qemu'
